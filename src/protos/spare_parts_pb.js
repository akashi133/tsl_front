// source: src/protos/spare_parts.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var src_protos_cargo_pb = require('../../src/protos/cargo_pb.js');
goog.object.extend(proto, src_protos_cargo_pb);
goog.exportSymbol('proto.api.FindSparePartRequest', null, global);
goog.exportSymbol('proto.api.FindSparePartResponse', null, global);
goog.exportSymbol('proto.api.FindSparePartResult', null, global);
goog.exportSymbol('proto.api.FindSparePartResult.Owner', null, global);
goog.exportSymbol('proto.api.FindSparePartResult.ShortGeo', null, global);
goog.exportSymbol('proto.api.SparePart', null, global);
goog.exportSymbol('proto.api.SparePartRequest', null, global);
goog.exportSymbol('proto.api.SparePartResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SparePart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.SparePart.repeatedFields_, null);
};
goog.inherits(proto.api.SparePart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.SparePart.displayName = 'proto.api.SparePart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SparePartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SparePartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.SparePartRequest.displayName = 'proto.api.SparePartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SparePartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SparePartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.SparePartResponse.displayName = 'proto.api.SparePartResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindSparePartRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.FindSparePartRequest.repeatedFields_, null);
};
goog.inherits(proto.api.FindSparePartRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindSparePartRequest.displayName = 'proto.api.FindSparePartRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindSparePartResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.FindSparePartResult.repeatedFields_, null);
};
goog.inherits(proto.api.FindSparePartResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindSparePartResult.displayName = 'proto.api.FindSparePartResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindSparePartResult.ShortGeo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FindSparePartResult.ShortGeo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindSparePartResult.ShortGeo.displayName = 'proto.api.FindSparePartResult.ShortGeo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindSparePartResult.Owner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FindSparePartResult.Owner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindSparePartResult.Owner.displayName = 'proto.api.FindSparePartResult.Owner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindSparePartResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.FindSparePartResponse.repeatedFields_, null);
};
goog.inherits(proto.api.FindSparePartResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindSparePartResponse.displayName = 'proto.api.FindSparePartResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.SparePart.repeatedFields_ = [4,5,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SparePart.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SparePart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SparePart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SparePart.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    categoriesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    transporttypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    location: (f = msg.getLocation()) && src_protos_cargo_pb.Geo.toObject(includeInstance, f),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    phoneList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    emailList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    cost: jspb.Message.getFieldWithDefault(msg, 13, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SparePart}
 */
proto.api.SparePart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SparePart;
  return proto.api.SparePart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SparePart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SparePart}
 */
proto.api.SparePart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setCategoriesList(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setTransporttypesList(value);
      break;
    case 6:
      var value = new src_protos_cargo_pb.Geo;
      reader.readMessage(value,src_protos_cargo_pb.Geo.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhone(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addEmail(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCost(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SparePart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SparePart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SparePart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SparePart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writePackedUint64(
      4,
      f
    );
  }
  f = message.getTransporttypesList();
  if (f.length > 0) {
    writer.writePackedUint64(
      5,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      src_protos_cargo_pb.Geo.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getPhoneList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getEmailList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getCost();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.SparePart.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.SparePart.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.SparePart.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.SparePart.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.SparePart.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.SparePart.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated uint64 categories = 4;
 * @return {!Array<number>}
 */
proto.api.SparePart.prototype.getCategoriesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.api.SparePart.prototype.setCategoriesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.api.SparePart.prototype.addCategories = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.SparePart.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};


/**
 * repeated uint64 transportTypes = 5;
 * @return {!Array<number>}
 */
proto.api.SparePart.prototype.getTransporttypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<number>} value */
proto.api.SparePart.prototype.setTransporttypesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.api.SparePart.prototype.addTransporttypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.SparePart.prototype.clearTransporttypesList = function() {
  this.setTransporttypesList([]);
};


/**
 * optional Geo location = 6;
 * @return {?proto.api.Geo}
 */
proto.api.SparePart.prototype.getLocation = function() {
  return /** @type{?proto.api.Geo} */ (
    jspb.Message.getWrapperField(this, src_protos_cargo_pb.Geo, 6));
};


/** @param {?proto.api.Geo|undefined} value */
proto.api.SparePart.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.SparePart.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.SparePart.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.api.SparePart.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.api.SparePart.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string images = 8;
 * @return {!Array<string>}
 */
proto.api.SparePart.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<string>} value */
proto.api.SparePart.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.SparePart.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.SparePart.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * repeated string phone = 9;
 * @return {!Array<string>}
 */
proto.api.SparePart.prototype.getPhoneList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<string>} value */
proto.api.SparePart.prototype.setPhoneList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.SparePart.prototype.addPhone = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.SparePart.prototype.clearPhoneList = function() {
  this.setPhoneList([]);
};


/**
 * repeated string email = 10;
 * @return {!Array<string>}
 */
proto.api.SparePart.prototype.getEmailList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.api.SparePart.prototype.setEmailList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.SparePart.prototype.addEmail = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.SparePart.prototype.clearEmailList = function() {
  this.setEmailList([]);
};


/**
 * optional double lat = 11;
 * @return {number}
 */
proto.api.SparePart.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.api.SparePart.prototype.setLat = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double lon = 12;
 * @return {number}
 */
proto.api.SparePart.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.api.SparePart.prototype.setLon = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional uint32 cost = 13;
 * @return {number}
 */
proto.api.SparePart.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.api.SparePart.prototype.setCost = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string currency = 14;
 * @return {string}
 */
proto.api.SparePart.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.api.SparePart.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SparePartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SparePartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SparePartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SparePartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SparePartRequest}
 */
proto.api.SparePartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SparePartRequest;
  return proto.api.SparePartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SparePartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SparePartRequest}
 */
proto.api.SparePartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SparePartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SparePartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SparePartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SparePartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.SparePartRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.SparePartRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SparePartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SparePartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SparePartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SparePartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SparePartResponse}
 */
proto.api.SparePartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SparePartResponse;
  return proto.api.SparePartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SparePartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SparePartResponse}
 */
proto.api.SparePartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SparePartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SparePartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SparePartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SparePartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.SparePartResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.SparePartResponse.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.api.SparePartResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.api.SparePartResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.FindSparePartRequest.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindSparePartRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindSparePartRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindSparePartRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationList: jspb.Message.toObjectList(msg.getLocationList(),
    src_protos_cargo_pb.Geo.toObject, includeInstance),
    categoriesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    transporttypesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindSparePartRequest}
 */
proto.api.FindSparePartRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindSparePartRequest;
  return proto.api.FindSparePartRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindSparePartRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindSparePartRequest}
 */
proto.api.FindSparePartRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_protos_cargo_pb.Geo;
      reader.readMessage(value,src_protos_cargo_pb.Geo.deserializeBinaryFromReader);
      msg.addLocation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategories(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransporttypes(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindSparePartRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindSparePartRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindSparePartRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      src_protos_cargo_pb.Geo.serializeBinaryToWriter
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTransporttypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * repeated Geo location = 1;
 * @return {!Array<!proto.api.Geo>}
 */
proto.api.FindSparePartRequest.prototype.getLocationList = function() {
  return /** @type{!Array<!proto.api.Geo>} */ (
    jspb.Message.getRepeatedWrapperField(this, src_protos_cargo_pb.Geo, 1));
};


/** @param {!Array<!proto.api.Geo>} value */
proto.api.FindSparePartRequest.prototype.setLocationList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Geo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Geo}
 */
proto.api.FindSparePartRequest.prototype.addLocation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Geo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartRequest.prototype.clearLocationList = function() {
  this.setLocationList([]);
};


/**
 * repeated string categories = 2;
 * @return {!Array<string>}
 */
proto.api.FindSparePartRequest.prototype.getCategoriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.api.FindSparePartRequest.prototype.setCategoriesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindSparePartRequest.prototype.addCategories = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartRequest.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};


/**
 * repeated string transportTypes = 3;
 * @return {!Array<string>}
 */
proto.api.FindSparePartRequest.prototype.getTransporttypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.api.FindSparePartRequest.prototype.setTransporttypesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindSparePartRequest.prototype.addTransporttypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartRequest.prototype.clearTransporttypesList = function() {
  this.setTransporttypesList([]);
};


/**
 * optional uint32 limit = 4;
 * @return {number}
 */
proto.api.FindSparePartRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.api.FindSparePartRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 offset = 5;
 * @return {number}
 */
proto.api.FindSparePartRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.api.FindSparePartRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.FindSparePartResult.repeatedFields_ = [11,12,13,14,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindSparePartResult.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindSparePartResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindSparePartResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    location: (f = msg.getLocation()) && proto.api.FindSparePartResult.ShortGeo.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    categoriesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    imagesList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    phoneList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    emailList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    owner: (f = msg.getOwner()) && proto.api.FindSparePartResult.Owner.toObject(includeInstance, f),
    likes: jspb.Message.getFieldWithDefault(msg, 18, 0),
    dislikes: jspb.Message.getFieldWithDefault(msg, 19, 0),
    transporttypesList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
    cost: jspb.Message.getFieldWithDefault(msg, 21, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindSparePartResult}
 */
proto.api.FindSparePartResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindSparePartResult;
  return proto.api.FindSparePartResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindSparePartResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindSparePartResult}
 */
proto.api.FindSparePartResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = new proto.api.FindSparePartResult.ShortGeo;
      reader.readMessage(value,proto.api.FindSparePartResult.ShortGeo.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategories(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhone(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addEmail(value);
      break;
    case 17:
      var value = new proto.api.FindSparePartResult.Owner;
      reader.readMessage(value,proto.api.FindSparePartResult.Owner.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLikes(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDislikes(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransporttypes(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCost(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindSparePartResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindSparePartResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindSparePartResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.FindSparePartResult.ShortGeo.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getPhoneList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getEmailList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.api.FindSparePartResult.Owner.serializeBinaryToWriter
    );
  }
  f = message.getLikes();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getDislikes();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getTransporttypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
  f = message.getCost();
  if (f !== 0) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindSparePartResult.ShortGeo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindSparePartResult.ShortGeo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResult.ShortGeo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindSparePartResult.ShortGeo}
 */
proto.api.FindSparePartResult.ShortGeo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindSparePartResult.ShortGeo;
  return proto.api.FindSparePartResult.ShortGeo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindSparePartResult.ShortGeo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindSparePartResult.ShortGeo}
 */
proto.api.FindSparePartResult.ShortGeo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindSparePartResult.ShortGeo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindSparePartResult.ShortGeo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResult.ShortGeo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.FindSparePartResult.ShortGeo.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.ShortGeo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.api.FindSparePartResult.ShortGeo.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.ShortGeo.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double lat = 5;
 * @return {number}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.api.FindSparePartResult.ShortGeo.prototype.setLat = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double lon = 6;
 * @return {number}
 */
proto.api.FindSparePartResult.ShortGeo.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.api.FindSparePartResult.ShortGeo.prototype.setLon = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindSparePartResult.Owner.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindSparePartResult.Owner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindSparePartResult.Owner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResult.Owner.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindSparePartResult.Owner}
 */
proto.api.FindSparePartResult.Owner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindSparePartResult.Owner;
  return proto.api.FindSparePartResult.Owner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindSparePartResult.Owner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindSparePartResult.Owner}
 */
proto.api.FindSparePartResult.Owner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindSparePartResult.Owner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindSparePartResult.Owner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindSparePartResult.Owner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResult.Owner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.FindSparePartResult.Owner.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.FindSparePartResult.Owner.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.FindSparePartResult.Owner.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.Owner.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.FindSparePartResult.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.FindSparePartResult.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string created_at = 2;
 * @return {string}
 */
proto.api.FindSparePartResult.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string updated_at = 3;
 * @return {string}
 */
proto.api.FindSparePartResult.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.prototype.setUpdatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ShortGeo location = 4;
 * @return {?proto.api.FindSparePartResult.ShortGeo}
 */
proto.api.FindSparePartResult.prototype.getLocation = function() {
  return /** @type{?proto.api.FindSparePartResult.ShortGeo} */ (
    jspb.Message.getWrapperField(this, proto.api.FindSparePartResult.ShortGeo, 4));
};


/** @param {?proto.api.FindSparePartResult.ShortGeo|undefined} value */
proto.api.FindSparePartResult.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.FindSparePartResult.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.FindSparePartResult.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.api.FindSparePartResult.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.api.FindSparePartResult.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string categories = 11;
 * @return {!Array<string>}
 */
proto.api.FindSparePartResult.prototype.getCategoriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<string>} value */
proto.api.FindSparePartResult.prototype.setCategoriesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindSparePartResult.prototype.addCategories = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartResult.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};


/**
 * repeated string images = 12;
 * @return {!Array<string>}
 */
proto.api.FindSparePartResult.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<string>} value */
proto.api.FindSparePartResult.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindSparePartResult.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartResult.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * repeated string phone = 13;
 * @return {!Array<string>}
 */
proto.api.FindSparePartResult.prototype.getPhoneList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/** @param {!Array<string>} value */
proto.api.FindSparePartResult.prototype.setPhoneList = function(value) {
  jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindSparePartResult.prototype.addPhone = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartResult.prototype.clearPhoneList = function() {
  this.setPhoneList([]);
};


/**
 * repeated string email = 14;
 * @return {!Array<string>}
 */
proto.api.FindSparePartResult.prototype.getEmailList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<string>} value */
proto.api.FindSparePartResult.prototype.setEmailList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindSparePartResult.prototype.addEmail = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartResult.prototype.clearEmailList = function() {
  this.setEmailList([]);
};


/**
 * optional Owner owner = 17;
 * @return {?proto.api.FindSparePartResult.Owner}
 */
proto.api.FindSparePartResult.prototype.getOwner = function() {
  return /** @type{?proto.api.FindSparePartResult.Owner} */ (
    jspb.Message.getWrapperField(this, proto.api.FindSparePartResult.Owner, 17));
};


/** @param {?proto.api.FindSparePartResult.Owner|undefined} value */
proto.api.FindSparePartResult.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.FindSparePartResult.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.FindSparePartResult.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 likes = 18;
 * @return {number}
 */
proto.api.FindSparePartResult.prototype.getLikes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.api.FindSparePartResult.prototype.setLikes = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 dislikes = 19;
 * @return {number}
 */
proto.api.FindSparePartResult.prototype.getDislikes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.api.FindSparePartResult.prototype.setDislikes = function(value) {
  jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * repeated string transportTypes = 20;
 * @return {!Array<string>}
 */
proto.api.FindSparePartResult.prototype.getTransporttypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/** @param {!Array<string>} value */
proto.api.FindSparePartResult.prototype.setTransporttypesList = function(value) {
  jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindSparePartResult.prototype.addTransporttypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartResult.prototype.clearTransporttypesList = function() {
  this.setTransporttypesList([]);
};


/**
 * optional uint32 cost = 21;
 * @return {number}
 */
proto.api.FindSparePartResult.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.api.FindSparePartResult.prototype.setCost = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional string currency = 22;
 * @return {string}
 */
proto.api.FindSparePartResult.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.api.FindSparePartResult.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.FindSparePartResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindSparePartResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindSparePartResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindSparePartResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sparepartsList: jspb.Message.toObjectList(msg.getSparepartsList(),
    proto.api.FindSparePartResult.toObject, includeInstance),
    found: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindSparePartResponse}
 */
proto.api.FindSparePartResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindSparePartResponse;
  return proto.api.FindSparePartResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindSparePartResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindSparePartResponse}
 */
proto.api.FindSparePartResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.FindSparePartResult;
      reader.readMessage(value,proto.api.FindSparePartResult.deserializeBinaryFromReader);
      msg.addSpareparts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFound(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindSparePartResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindSparePartResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindSparePartResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindSparePartResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSparepartsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.FindSparePartResult.serializeBinaryToWriter
    );
  }
  f = message.getFound();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * repeated FindSparePartResult SpareParts = 1;
 * @return {!Array<!proto.api.FindSparePartResult>}
 */
proto.api.FindSparePartResponse.prototype.getSparepartsList = function() {
  return /** @type{!Array<!proto.api.FindSparePartResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.FindSparePartResult, 1));
};


/** @param {!Array<!proto.api.FindSparePartResult>} value */
proto.api.FindSparePartResponse.prototype.setSparepartsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.FindSparePartResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.FindSparePartResult}
 */
proto.api.FindSparePartResponse.prototype.addSpareparts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.FindSparePartResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindSparePartResponse.prototype.clearSparepartsList = function() {
  this.setSparepartsList([]);
};


/**
 * optional uint64 found = 2;
 * @return {number}
 */
proto.api.FindSparePartResponse.prototype.getFound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.api.FindSparePartResponse.prototype.setFound = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.api);
