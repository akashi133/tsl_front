// source: src/protos/transport.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var src_protos_cargo_pb = require('../../src/protos/cargo_pb.js');
goog.object.extend(proto, src_protos_cargo_pb);
goog.exportSymbol('proto.api.FindTransportRequest', null, global);
goog.exportSymbol('proto.api.FindTransportResponse', null, global);
goog.exportSymbol('proto.api.FindTransportResult', null, global);
goog.exportSymbol('proto.api.FindTransportResult.Owner', null, global);
goog.exportSymbol('proto.api.FindTransportResult.ShortGeo', null, global);
goog.exportSymbol('proto.api.SalesType', null, global);
goog.exportSymbol('proto.api.Transport', null, global);
goog.exportSymbol('proto.api.TransportRequest', null, global);
goog.exportSymbol('proto.api.TransportResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Transport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Transport.repeatedFields_, null);
};
goog.inherits(proto.api.Transport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.Transport.displayName = 'proto.api.Transport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.TransportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.TransportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.TransportRequest.displayName = 'proto.api.TransportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.TransportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.TransportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.TransportResponse.displayName = 'proto.api.TransportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindTransportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.FindTransportRequest.repeatedFields_, null);
};
goog.inherits(proto.api.FindTransportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindTransportRequest.displayName = 'proto.api.FindTransportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindTransportResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.FindTransportResult.repeatedFields_, null);
};
goog.inherits(proto.api.FindTransportResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindTransportResult.displayName = 'proto.api.FindTransportResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindTransportResult.ShortGeo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FindTransportResult.ShortGeo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindTransportResult.ShortGeo.displayName = 'proto.api.FindTransportResult.ShortGeo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindTransportResult.Owner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FindTransportResult.Owner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindTransportResult.Owner.displayName = 'proto.api.FindTransportResult.Owner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FindTransportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.FindTransportResponse.repeatedFields_, null);
};
goog.inherits(proto.api.FindTransportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.FindTransportResponse.displayName = 'proto.api.FindTransportResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Transport.repeatedFields_ = [18,20,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Transport.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Transport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Transport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Transport.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    brand: jspb.Message.getFieldWithDefault(msg, 5, 0),
    transporttype: jspb.Message.getFieldWithDefault(msg, 6, 0),
    model: jspb.Message.getFieldWithDefault(msg, 7, ""),
    releaseyear: jspb.Message.getFieldWithDefault(msg, 8, ""),
    engine: jspb.Message.getFieldWithDefault(msg, 9, 0),
    transmission: jspb.Message.getFieldWithDefault(msg, 10, ""),
    mileage: jspb.Message.getFieldWithDefault(msg, 11, 0),
    fueltype: jspb.Message.getFieldWithDefault(msg, 12, ""),
    availability: jspb.Message.getFieldWithDefault(msg, 13, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 14, ""),
    cost: jspb.Message.getFieldWithDefault(msg, 15, 0),
    information: jspb.Message.getFieldWithDefault(msg, 16, ""),
    placement: (f = msg.getPlacement()) && src_protos_cargo_pb.Geo.toObject(includeInstance, f),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    currency: jspb.Message.getFieldWithDefault(msg, 19, ""),
    phonesList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
    emailsList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    numberpassengers: jspb.Message.getFieldWithDefault(msg, 22, 0),
    powder: jspb.Message.getFieldWithDefault(msg, 23, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Transport}
 */
proto.api.Transport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Transport;
  return proto.api.Transport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Transport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Transport}
 */
proto.api.Transport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {!proto.api.SalesType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBrand(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTransporttype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReleaseyear(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEngine(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransmission(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMileage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFueltype(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailability(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCost(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformation(value);
      break;
    case 17:
      var value = new src_protos_cargo_pb.Geo;
      reader.readMessage(value,src_protos_cargo_pb.Geo.deserializeBinaryFromReader);
      msg.setPlacement(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addEmails(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumberpassengers(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPowder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Transport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Transport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Transport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Transport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getBrand();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTransporttype();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReleaseyear();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getEngine();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getTransmission();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMileage();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getFueltype();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAvailability();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCost();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getInformation();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPlacement();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      src_protos_cargo_pb.Geo.serializeBinaryToWriter
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
  f = message.getEmailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getNumberpassengers();
  if (f !== 0) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = message.getPowder();
  if (f !== 0) {
    writer.writeUint32(
      23,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.Transport.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.Transport.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.api.Transport.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.Transport.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Transport.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.Transport.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.api.Transport.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.Transport.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Transport.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SalesType type = 4;
 * @return {!proto.api.SalesType}
 */
proto.api.Transport.prototype.getType = function() {
  return /** @type {!proto.api.SalesType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.api.SalesType} value */
proto.api.Transport.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 brand = 5;
 * @return {number}
 */
proto.api.Transport.prototype.getBrand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setBrand = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 transportType = 6;
 * @return {number}
 */
proto.api.Transport.prototype.getTransporttype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setTransporttype = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string model = 7;
 * @return {string}
 */
proto.api.Transport.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setModel = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string releaseYear = 8;
 * @return {string}
 */
proto.api.Transport.prototype.getReleaseyear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setReleaseyear = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 engine = 9;
 * @return {number}
 */
proto.api.Transport.prototype.getEngine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setEngine = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string transmission = 10;
 * @return {string}
 */
proto.api.Transport.prototype.getTransmission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setTransmission = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint64 mileage = 11;
 * @return {number}
 */
proto.api.Transport.prototype.getMileage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setMileage = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string fuelType = 12;
 * @return {string}
 */
proto.api.Transport.prototype.getFueltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setFueltype = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string availability = 13;
 * @return {string}
 */
proto.api.Transport.prototype.getAvailability = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setAvailability = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string condition = 14;
 * @return {string}
 */
proto.api.Transport.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setCondition = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional uint64 cost = 15;
 * @return {number}
 */
proto.api.Transport.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setCost = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string information = 16;
 * @return {string}
 */
proto.api.Transport.prototype.getInformation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setInformation = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional Geo placement = 17;
 * @return {?proto.api.Geo}
 */
proto.api.Transport.prototype.getPlacement = function() {
  return /** @type{?proto.api.Geo} */ (
    jspb.Message.getWrapperField(this, src_protos_cargo_pb.Geo, 17));
};


/** @param {?proto.api.Geo|undefined} value */
proto.api.Transport.prototype.setPlacement = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.Transport.prototype.clearPlacement = function() {
  this.setPlacement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.Transport.prototype.hasPlacement = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated string images = 18;
 * @return {!Array<string>}
 */
proto.api.Transport.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array<string>} value */
proto.api.Transport.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.Transport.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.Transport.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * optional string currency = 19;
 * @return {string}
 */
proto.api.Transport.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.api.Transport.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * repeated string phones = 20;
 * @return {!Array<string>}
 */
proto.api.Transport.prototype.getPhonesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/** @param {!Array<string>} value */
proto.api.Transport.prototype.setPhonesList = function(value) {
  jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.Transport.prototype.addPhones = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.Transport.prototype.clearPhonesList = function() {
  this.setPhonesList([]);
};


/**
 * repeated string emails = 21;
 * @return {!Array<string>}
 */
proto.api.Transport.prototype.getEmailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array<string>} value */
proto.api.Transport.prototype.setEmailsList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.Transport.prototype.addEmails = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.Transport.prototype.clearEmailsList = function() {
  this.setEmailsList([]);
};


/**
 * optional uint32 numberPassengers = 22;
 * @return {number}
 */
proto.api.Transport.prototype.getNumberpassengers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setNumberpassengers = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional uint32 powder = 23;
 * @return {number}
 */
proto.api.Transport.prototype.getPowder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.api.Transport.prototype.setPowder = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.TransportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.TransportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.TransportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TransportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.TransportRequest}
 */
proto.api.TransportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.TransportRequest;
  return proto.api.TransportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.TransportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.TransportRequest}
 */
proto.api.TransportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.TransportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.TransportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.TransportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TransportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.TransportRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.TransportRequest.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.TransportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.TransportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.TransportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TransportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.TransportResponse}
 */
proto.api.TransportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.TransportResponse;
  return proto.api.TransportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.TransportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.TransportResponse}
 */
proto.api.TransportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.TransportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.TransportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.TransportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TransportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.TransportResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.TransportResponse.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.api.TransportResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.api.TransportResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.FindTransportRequest.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindTransportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindTransportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindTransportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    placement: (f = msg.getPlacement()) && src_protos_cargo_pb.Geo.toObject(includeInstance, f),
    condition: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transporttypeList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    fueltypeList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    brandList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    costfrom: jspb.Message.getFieldWithDefault(msg, 7, 0),
    costtill: jspb.Message.getFieldWithDefault(msg, 8, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 9, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindTransportRequest}
 */
proto.api.FindTransportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindTransportRequest;
  return proto.api.FindTransportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindTransportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindTransportRequest}
 */
proto.api.FindTransportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.SalesType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new src_protos_cargo_pb.Geo;
      reader.readMessage(value,src_protos_cargo_pb.Geo.deserializeBinaryFromReader);
      msg.setPlacement(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setTransporttypeList(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addFueltype(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setBrandList(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCostfrom(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCosttill(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindTransportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindTransportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindTransportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPlacement();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      src_protos_cargo_pb.Geo.serializeBinaryToWriter
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransporttypeList();
  if (f.length > 0) {
    writer.writePackedUint64(
      4,
      f
    );
  }
  f = message.getFueltypeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getBrandList();
  if (f.length > 0) {
    writer.writePackedUint64(
      6,
      f
    );
  }
  f = message.getCostfrom();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getCosttill();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional SalesType type = 1;
 * @return {!proto.api.SalesType}
 */
proto.api.FindTransportRequest.prototype.getType = function() {
  return /** @type {!proto.api.SalesType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.api.SalesType} value */
proto.api.FindTransportRequest.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Geo placement = 2;
 * @return {?proto.api.Geo}
 */
proto.api.FindTransportRequest.prototype.getPlacement = function() {
  return /** @type{?proto.api.Geo} */ (
    jspb.Message.getWrapperField(this, src_protos_cargo_pb.Geo, 2));
};


/** @param {?proto.api.Geo|undefined} value */
proto.api.FindTransportRequest.prototype.setPlacement = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.FindTransportRequest.prototype.clearPlacement = function() {
  this.setPlacement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.FindTransportRequest.prototype.hasPlacement = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string condition = 3;
 * @return {string}
 */
proto.api.FindTransportRequest.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.FindTransportRequest.prototype.setCondition = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated uint64 transportType = 4;
 * @return {!Array<number>}
 */
proto.api.FindTransportRequest.prototype.getTransporttypeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.api.FindTransportRequest.prototype.setTransporttypeList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.api.FindTransportRequest.prototype.addTransporttype = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindTransportRequest.prototype.clearTransporttypeList = function() {
  this.setTransporttypeList([]);
};


/**
 * repeated string fuelType = 5;
 * @return {!Array<string>}
 */
proto.api.FindTransportRequest.prototype.getFueltypeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.api.FindTransportRequest.prototype.setFueltypeList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindTransportRequest.prototype.addFueltype = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindTransportRequest.prototype.clearFueltypeList = function() {
  this.setFueltypeList([]);
};


/**
 * repeated uint64 brand = 6;
 * @return {!Array<number>}
 */
proto.api.FindTransportRequest.prototype.getBrandList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.api.FindTransportRequest.prototype.setBrandList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.api.FindTransportRequest.prototype.addBrand = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindTransportRequest.prototype.clearBrandList = function() {
  this.setBrandList([]);
};


/**
 * optional uint64 costFrom = 7;
 * @return {number}
 */
proto.api.FindTransportRequest.prototype.getCostfrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.api.FindTransportRequest.prototype.setCostfrom = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 costTill = 8;
 * @return {number}
 */
proto.api.FindTransportRequest.prototype.getCosttill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.api.FindTransportRequest.prototype.setCosttill = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 limit = 9;
 * @return {number}
 */
proto.api.FindTransportRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.api.FindTransportRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 offset = 10;
 * @return {number}
 */
proto.api.FindTransportRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.api.FindTransportRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.FindTransportResult.repeatedFields_ = [18,20,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindTransportResult.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindTransportResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindTransportResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    brand: jspb.Message.getFieldWithDefault(msg, 4, ""),
    transporttype: jspb.Message.getFieldWithDefault(msg, 5, ""),
    model: jspb.Message.getFieldWithDefault(msg, 6, ""),
    releaseyear: jspb.Message.getFieldWithDefault(msg, 7, ""),
    engine: jspb.Message.getFieldWithDefault(msg, 8, ""),
    transmission: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mileage: jspb.Message.getFieldWithDefault(msg, 10, 0),
    fueltype: jspb.Message.getFieldWithDefault(msg, 11, ""),
    availability: jspb.Message.getFieldWithDefault(msg, 12, ""),
    salestype: jspb.Message.getFieldWithDefault(msg, 13, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 14, ""),
    cost: jspb.Message.getFieldWithDefault(msg, 15, 0),
    information: jspb.Message.getFieldWithDefault(msg, 16, ""),
    location: (f = msg.getLocation()) && proto.api.FindTransportResult.ShortGeo.toObject(includeInstance, f),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    currency: jspb.Message.getFieldWithDefault(msg, 19, ""),
    phonesList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
    emailsList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    numberpassengers: jspb.Message.getFieldWithDefault(msg, 22, 0),
    powder: jspb.Message.getFieldWithDefault(msg, 23, 0),
    owner: (f = msg.getOwner()) && proto.api.FindTransportResult.Owner.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindTransportResult}
 */
proto.api.FindTransportResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindTransportResult;
  return proto.api.FindTransportResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindTransportResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindTransportResult}
 */
proto.api.FindTransportResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrand(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransporttype(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReleaseyear(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEngine(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransmission(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMileage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFueltype(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailability(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSalestype(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCost(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setInformation(value);
      break;
    case 17:
      var value = new proto.api.FindTransportResult.ShortGeo;
      reader.readMessage(value,proto.api.FindTransportResult.ShortGeo.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addPhones(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addEmails(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumberpassengers(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPowder(value);
      break;
    case 171:
      var value = new proto.api.FindTransportResult.Owner;
      reader.readMessage(value,proto.api.FindTransportResult.Owner.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindTransportResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindTransportResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindTransportResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBrand();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTransporttype();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReleaseyear();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEngine();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTransmission();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMileage();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getFueltype();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAvailability();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSalestype();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCost();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getInformation();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.api.FindTransportResult.ShortGeo.serializeBinaryToWriter
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getPhonesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
  f = message.getEmailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getNumberpassengers();
  if (f !== 0) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = message.getPowder();
  if (f !== 0) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      171,
      f,
      proto.api.FindTransportResult.Owner.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindTransportResult.ShortGeo.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindTransportResult.ShortGeo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindTransportResult.ShortGeo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResult.ShortGeo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindTransportResult.ShortGeo}
 */
proto.api.FindTransportResult.ShortGeo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindTransportResult.ShortGeo;
  return proto.api.FindTransportResult.ShortGeo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindTransportResult.ShortGeo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindTransportResult.ShortGeo}
 */
proto.api.FindTransportResult.ShortGeo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindTransportResult.ShortGeo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindTransportResult.ShortGeo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindTransportResult.ShortGeo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResult.ShortGeo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.FindTransportResult.ShortGeo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.ShortGeo.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.FindTransportResult.ShortGeo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.ShortGeo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 type = 3;
 * @return {number}
 */
proto.api.FindTransportResult.ShortGeo.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.ShortGeo.prototype.setType = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindTransportResult.Owner.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindTransportResult.Owner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindTransportResult.Owner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResult.Owner.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindTransportResult.Owner}
 */
proto.api.FindTransportResult.Owner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindTransportResult.Owner;
  return proto.api.FindTransportResult.Owner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindTransportResult.Owner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindTransportResult.Owner}
 */
proto.api.FindTransportResult.Owner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindTransportResult.Owner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindTransportResult.Owner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindTransportResult.Owner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResult.Owner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.FindTransportResult.Owner.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.Owner.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.FindTransportResult.Owner.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.Owner.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api.FindTransportResult.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string created_at = 2;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string updated_at = 3;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setUpdatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string brand = 4;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getBrand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setBrand = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string transportType = 5;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getTransporttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setTransporttype = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string model = 6;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setModel = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string releaseYear = 7;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getReleaseyear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setReleaseyear = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string engine = 8;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getEngine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setEngine = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string transmission = 9;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getTransmission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setTransmission = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 mileage = 10;
 * @return {number}
 */
proto.api.FindTransportResult.prototype.getMileage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.prototype.setMileage = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string fuelType = 11;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getFueltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setFueltype = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string availability = 12;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getAvailability = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setAvailability = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string salesType = 13;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getSalestype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setSalestype = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string condition = 14;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setCondition = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional uint64 cost = 15;
 * @return {number}
 */
proto.api.FindTransportResult.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.prototype.setCost = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string information = 16;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getInformation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setInformation = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional ShortGeo location = 17;
 * @return {?proto.api.FindTransportResult.ShortGeo}
 */
proto.api.FindTransportResult.prototype.getLocation = function() {
  return /** @type{?proto.api.FindTransportResult.ShortGeo} */ (
    jspb.Message.getWrapperField(this, proto.api.FindTransportResult.ShortGeo, 17));
};


/** @param {?proto.api.FindTransportResult.ShortGeo|undefined} value */
proto.api.FindTransportResult.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.FindTransportResult.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.FindTransportResult.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated string images = 18;
 * @return {!Array<string>}
 */
proto.api.FindTransportResult.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array<string>} value */
proto.api.FindTransportResult.prototype.setImagesList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindTransportResult.prototype.addImages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindTransportResult.prototype.clearImagesList = function() {
  this.setImagesList([]);
};


/**
 * optional string currency = 19;
 * @return {string}
 */
proto.api.FindTransportResult.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.api.FindTransportResult.prototype.setCurrency = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * repeated string phones = 20;
 * @return {!Array<string>}
 */
proto.api.FindTransportResult.prototype.getPhonesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/** @param {!Array<string>} value */
proto.api.FindTransportResult.prototype.setPhonesList = function(value) {
  jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindTransportResult.prototype.addPhones = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindTransportResult.prototype.clearPhonesList = function() {
  this.setPhonesList([]);
};


/**
 * repeated string emails = 21;
 * @return {!Array<string>}
 */
proto.api.FindTransportResult.prototype.getEmailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/** @param {!Array<string>} value */
proto.api.FindTransportResult.prototype.setEmailsList = function(value) {
  jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api.FindTransportResult.prototype.addEmails = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindTransportResult.prototype.clearEmailsList = function() {
  this.setEmailsList([]);
};


/**
 * optional uint32 numberPassengers = 22;
 * @return {number}
 */
proto.api.FindTransportResult.prototype.getNumberpassengers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.prototype.setNumberpassengers = function(value) {
  jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional uint32 powder = 23;
 * @return {number}
 */
proto.api.FindTransportResult.prototype.getPowder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.api.FindTransportResult.prototype.setPowder = function(value) {
  jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional Owner owner = 171;
 * @return {?proto.api.FindTransportResult.Owner}
 */
proto.api.FindTransportResult.prototype.getOwner = function() {
  return /** @type{?proto.api.FindTransportResult.Owner} */ (
    jspb.Message.getWrapperField(this, proto.api.FindTransportResult.Owner, 171));
};


/** @param {?proto.api.FindTransportResult.Owner|undefined} value */
proto.api.FindTransportResult.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 171, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api.FindTransportResult.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.FindTransportResult.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 171) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.FindTransportResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FindTransportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FindTransportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FindTransportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transportsList: jspb.Message.toObjectList(msg.getTransportsList(),
    proto.api.FindTransportResult.toObject, includeInstance),
    found: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FindTransportResponse}
 */
proto.api.FindTransportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FindTransportResponse;
  return proto.api.FindTransportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FindTransportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FindTransportResponse}
 */
proto.api.FindTransportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.FindTransportResult;
      reader.readMessage(value,proto.api.FindTransportResult.deserializeBinaryFromReader);
      msg.addTransports(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFound(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FindTransportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FindTransportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FindTransportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FindTransportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.FindTransportResult.serializeBinaryToWriter
    );
  }
  f = message.getFound();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * repeated FindTransportResult transports = 1;
 * @return {!Array<!proto.api.FindTransportResult>}
 */
proto.api.FindTransportResponse.prototype.getTransportsList = function() {
  return /** @type{!Array<!proto.api.FindTransportResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.FindTransportResult, 1));
};


/** @param {!Array<!proto.api.FindTransportResult>} value */
proto.api.FindTransportResponse.prototype.setTransportsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.FindTransportResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.FindTransportResult}
 */
proto.api.FindTransportResponse.prototype.addTransports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.FindTransportResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api.FindTransportResponse.prototype.clearTransportsList = function() {
  this.setTransportsList([]);
};


/**
 * optional uint64 found = 2;
 * @return {number}
 */
proto.api.FindTransportResponse.prototype.getFound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.api.FindTransportResponse.prototype.setFound = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.api.SalesType = {
  SALE: 0,
  RENT: 1,
  LEASING: 2
};

goog.object.extend(exports, proto.api);
